# ‚óè –ú–µ—Ç–æ–¥ tell
# –ú–µ—Ç–æ–¥ tell –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â—É—é –ø–æ–∑–∏—Ü–∏—é –≤ —Ñ–∞–π–ª–µ.
text = ['Lorem ipsum dolor sit amet, consectetur adipisicing elit.',
'Consequatur debitis explicabo laboriosam sint suscipit temporibus veniam?',
'Accusantium alias amet fugit iste neque non odit quia saepe totam velit?', ]
with open('new_data1.txt', 'w', encoding='utf-8') as f:
    print(f.tell())
    for line in text:
        f.write(f'{line}\n')
        print(f.tell())
    print(f.tell())


# ‚óè –ú–µ—Ç–æ–¥ tell
# –ú–µ—Ç–æ–¥ tell –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â—É—é –ø–æ–∑–∏—Ü–∏—é –≤ —Ñ–∞–π–ª–µ

last = before = 0
text = ['Lorem ipsum dolor sit amet, consectetur adipisicing elit.',
'Consequatur debitis explicabo laboriosam sint suscipit temporibus veniam?',
'Accusantium alias amet fugit iste neque non odit quia saepe totam velit?', ]
with open('new_data1.txt', 'r+', encoding='utf-8') as f:
    while line := f.readline():
        last, before = f.tell(), last
    print(f'{last = }, {before = }')
    print(f'{f.seek(before, 0) = }')
    f.write('\n'.join(text))
print('1')

# ‚óè –ú–µ—Ç–æ–¥ seek
# –ú–µ—Ç–æ–¥ seek –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª–æ–∂–µ–Ω–∏–µ ‚Äú–∫—É—Ä—Å–æ—Ä–∞‚Äù –≤ —Ñ–∞–π–ª–µ.
# seek(offset, whence=0), –≥–¥–µ offset ‚Äî —Å–º–µ—â–µ–Ω–∏–µ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –æ–ø–æ—Ä–Ω–æ–π —Ç–æ—á–∫–∏, whence -
# —Å–ø–æ—Å–æ–± –≤—ã–±–æ—Ä–∞ –æ–ø–æ—Ä–æ–Ω–æ–π —Ç–æ—á–∫–∏.
# ‚óè whence = 0 - –æ—Ç—Å—á—ë—Ç –æ—Ç –Ω–∞—á–∞–ª–∞ —Ñ–∞–π–ª–∞
# ‚óè whence = 1 - –æ—Ç—Å—á—ë—Ç –æ—Ç —Ç–µ–∫—É—â–µ–π –ø–æ–∑–∏—Ü–∏–∏ –≤ —Ñ–∞–π–ª–µ
# ‚óè whence = 2 - –æ—Ç—Å—á—ë—Ç –æ—Ç –∫–æ–Ω—Ü–∞ —Ñ–∞–π–ª–∞
# üî• –í–∞–∂–Ω–æ! –ó–Ω–∞—á–µ–Ω–∏—è 1 –∏ 2 –¥–æ–ø—É—Å—Ç–∏–º—ã —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∏–Ω–∞—Ä–Ω—ã–º–∏
# —Ñ–∞–π–ª–∞–º–∏. –ò—Å–∫–ª—é—á–µ–Ω–∏–µ seek(0, 2) –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –∫–æ–Ω–µ—Ü —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞.
# –ú–µ—Ç–æ–¥ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—É—é –ø–æ–∑–∏—Ü–∏—é ‚Äú–∫—É—Ä—Å–æ—Ä–∞‚Äù.
last = before = 0
text = ['Lorem ipsum dolor sit amet, consectetur adipisicing elit.',
'Consequatur debitis explicabo laboriosam sint suscipit temporibus veniam?',
'Accusantium alias amet fugit iste neque non odit quia saepe totam velit?', ]
with open('new_data.txt', 'r+', encoding='utf-8') as f:
    while line := f.readline():
        last, before = f.tell(), last
    print(f'{last = }, {before = }')
    print(f'{f.seek(before, 0) = }')
    f.write('\n'.join(text))

print('2')
# ‚óè –ú–µ—Ç–æ–¥ truncate
# truncate(size=None) ‚Äî –º–µ—Ç–æ–¥ –∏–∑–º–µ–Ω—è–µ—Ç —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞. –ï—Å–ª–∏ –Ω–µ –ø–µ—Ä–µ–¥–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –≤
# –ø–∞—Ä–∞–º–µ—Ç—Ä size –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–∞ —á–∞—Å—Ç—å —Ñ–∞–π–ª–∞ –æ—Ç —Ç–µ–∫—É—â–µ–π –ø–æ–∑–∏—Ü–∏–∏ –¥–æ –∫–æ–Ω—Ü–∞. –ú–µ—Ç–æ–¥
# –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–∑–∏—Ü–∏—é –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞.

last = before = 0
with open('new_data.txt', 'r+', encoding='utf-8') as f:
    while line := f.readline():
        last, before = f.tell(), last
    print(f.seek(before, 0))
    print(f.truncate())

print(3)
# –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä size –º–µ—Ç–æ–¥ –∏–∑–º–µ–Ω—è–µ—Ç —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –¥–æ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —á–∏—Å–ª–∞
# —Å–∏–º–≤–æ–ª–æ–≤ –∏–ª–∏ –±–∞–π—Ç –æ—Ç –Ω–∞—á–∞–ª–∞ —Ñ–∞–π–ª–∞.
size = 64
with open('new_data.txt', 'r+', encoding='utf-8') as f:
    print(f.truncate(size))
print(4)